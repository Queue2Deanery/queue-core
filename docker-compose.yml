version: '2.1'

services:

  queue-db:
    image: postgres
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: queue
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  authentication-db:
    image: postgres
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: authentication
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbit:
    image: "rabbitmq:3-management"
    hostname: "rabbit"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "queue"
      RABBITMQ_DEFAULT_PASS: "queue"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - 15672:15672
      - 5672:5672
    expose:
      - 15672
      - 5672
    tty: true

  external:
    restart: always
    build:
      context: .
      dockerfile: external.Dockerfile
    image: queue-backend-external:v1.0
    ports:
      - 80:8080
    expose:
      - 80
    depends_on:
      queue-db:
        condition: service_healthy
      authentication:
        condition: service_started
    environment:
      - server.port=8080
      - app.authenticationUri=http://authentication:8080/api/v1.0
      - spring.datasource.url=jdbc:postgresql://queue-db:5432/queue
      - spring.datasource.username=postgres
      - spring.datasource.password=postgres

  authentication:
    restart: always
    build:
      context: .
      dockerfile: authentication.Dockerfile
    image: queue-backend-authentication:v1.0
    ports:
      - 83:8080
    expose:
      - 83
    depends_on:
      authentication-db:
        condition: service_healthy
      openldap:
        condition: service_started
      mail:
        condition: service_started
      rabbit:
        condition: service_started
    environment:
      - server.port=8080
      - spring.datasource.url=jdbc:postgresql://authentication-db:5432/authentication
      - spring.datasource.username=postgres
      - spring.datasource.password=postgres
      - spring.rabbitmq.host=rabbit

  mail:
    restart: always
    build:
      context: .
      dockerfile: mail.Dockerfile
    image: queue-backend-mail:v1.0
    depends_on:
      rabbit:
        condition: service_started
    environment:
      - spring.rabbitmq.host=rabbit
      - spring.mail.password=xxxxxxxxxxxxxxxx

  openldap:
    restart: on-failure
    image: osixia/openldap:latest
    container_name: openldap
    environment:
      #      LDAP_TLS: 'true'
      #      LDAP_TLS_CRT_FILENAME: 'fullchain.pem'
      #      LDAP_TLS_KEY_FILENAME: 'privkey.pem'
      #      LDAP_TLS_CA_CRT_FILENAME: 'fullchain.pem'
      LDAP_ORGANISATION: "PWEE"
      LDAP_DOMAIN: "ee.pw.edu.pl"
      LDAP_BASE_DN: "dc=ee,dc=pl"
      LDAP_ADMIN_PASSWORD: "secret"
    #      LDAP_TLS_CIPHER_SUITE: "NORMAL"
    #      LDAP_TLS_VERIFY_CLIENT: "allow"
    tty: true
    stdin_open: true
    #    volumes:
    #      - /var/lib/ldap
    #      - /etc/ldap/slapd.d
    #      - /container/service/slapd/assets/certs/
    ports:
      - "389:389"
      - "639:639"
  #    hostname: "ee.pw.edu.pl"

